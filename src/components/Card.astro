---
import MarkdownIt from "markdown-it";

function addClassToLinks(md) {
  const defaultRenderer =
    md.renderer.rules.link_open ||
    function (tokens, idx, options, env, self) {
      return self.renderToken(tokens, idx, options);
    };

  md.renderer.rules.link_open = function (tokens, idx, options, env, self) {
    // tokens[idx].attrPush(['class', 'link--gasping']);
    // push two classes to the token
    tokens[idx].attrPush(["class", "link--gasping text--faded"]);
    return defaultRenderer(tokens, idx, options, env, self);
  };
}

const md = new MarkdownIt();
md.use(addClassToLinks);

export interface CardProps {
  title: string;
  href: string;
  date?: string;
  description: string;
  tags_icon?: string[];
  tags_text?: string[];
  image_source?: string;
  image_alt?: string;
  tags_enabled: boolean;
  link_enabled: boolean;
  link_external?: false;
}

const {
  title,
  href,
  date,
  description,
  tags_icon,
  tags_text,
  image_source,
  image_alt,
  tags_enabled,
  link_enabled,
  link_external,
} = Astro.props as CardProps;

const ISO_date = date ? new Date(date).toISOString().split("T")[0] : null;
const md_description = md.renderInline(description);
---

{
  tags_enabled && (
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/gh/devicons/devicon@v2.15.1/devicon.min.css"
    />
  )
}
<div class="card-container">
  <div class="card">
    <div class="card-content">
      <div class="card-header">
      <div class="card-title">
        {
          image_source && (
              <img class="card-mini-image" src={image_source} alt="" />
          )
        }
        {
          link_enabled && link_external && (
            <a
              data-turbo="false"
              href={href}
              class="card-title-text-link"
              target="_blank"
              rel="noopener"
            >
              {title}
            </a>
          )
        }
        {
          link_enabled && !link_external && (
            <a
              data-turbo="false"
              href={href}
              class="card-title-text-link link--gasping"
            >
              {title}
            </a>
          )
        }
        {!link_enabled && <p class="card-title-text">{title}</p>}
      </div>
      {date && <div class="card-date">{ISO_date}</div>}
      </div>
      <div class="card-separator"></div>
      <div class="card-info">
        <div class="card-description" set:html={md_description} />
        {
          tags_enabled && (
            <div class="card-tags">
              <ul class="card-tags-list">
                {tags_icon &&
                  tags_icon.map((tag: string) => (
                    <li>
                      <i class={tag} />
                    </li>
                  ))}
                {tags_text && tags_text.map((tag: string) => <li>{tag}</li>)}
              </ul>
            </div>
          )
        }
      </div>
    </div>
    {
      image_source && (
        <div class="card-image">
          <img src={image_source} alt="" />
        </div>
      )
    }
  </div>
</div>

<style>
  .card-separator {
    width: 100%;
    height: 1px;
    background-color: var(--border-color);
    margin: 8px 0;
  }

  .card-container {
    margin-left: 0.5rem;
    margin-right: 0.5rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin-bottom: 1rem;
  }

  .card {
    max-width: 600px;
    width: 100%;
    background-color: var(--item-background-color);
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    border: 1px solid var(--border-color);
    padding: 10px;
    position: relative;
  }

  .card-content {
    flex: 1;
    line-height: initial;
  }

  .card-info {
    display: flex;
    justify-content: space-between;
    height: 100%;
    gap: 1rem;
  }

  .card-title {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    margin-right: 3px;
    gap: 0.3rem;
    vertical-align: middle;
  }
  .card-title-text {
    margin: 0;
    padding: 0;
    font-size: 14px;
    font-weight: 500;
    text-transform: uppercase;
    color: var(--power-text-color);
    transition: all 0.2s ease-in-out;
    display: flex;
    align-items: center;
    position: relative;
    top: -0.05rem;
  }

  .card-date {
    flex-shrink: 0;
    height: 100%;
    font-family: "Fira Code", monospace;
    font-size: 14px;
    color: var(--power-text-color);
    position: relative;
  }

  .card-title-text-link {
    line-height: inherit;
    margin: 0;
    padding: 0;
    font-size: 14px;
    font-weight: 500;
    text-decoration: underline;
    text-transform: uppercase;
    color: var(--power-text-color);
    cursor: pointer;
    text-underline-offset: var(--text-underline-offset-default);
    text-decoration-thickness: var(--text-decoration-thickness);
    transition: all 0.2s ease-in-out;
    display: flex;
    align-items: center;
    position: relative;
    top: -0.08rem;
  }


  /* link style where instead of colored links, links are underlined and the underline floats downwards when hovered */
  main a {
    color: var(--power-text-color);
    text-decoration: underline;
    text-underline-offset: var(--text-underline-offset-default);
    text-decoration-thickness: var(--text-decoration-thickness);
    transition: all 0.2s ease-in-out;
  }

  /* make body 60% on desktop */
  /* link style where instead of colored links, links are underlined and the underline floats downwards when hovered */
  @media (min-width: 768px) {
    .card-title-text-link:hover {
      text-decoration: underline;
      text-underline-offset: calc(
        var(--text-underline-offset-default) +
          var(--text-underline-offset-hover-diff)
      );
      text-decoration-thickness: var(--text-decoration-thickness);
      color: var(--accent-color);
      transition: all 0.2s ease-in-out;
    }
  }

  /* add padding to top of title text on firefox browser */
  @-moz-document url-prefix() {
    .card-title-text {
      /* padding-top: 0.1rem; */
    }
    .card-title-text-link {
      /* padding-top: 0.1rem; */
    }
  }
  .card-description {
    width: 100%;
    color: var(--faded-text-color);
    line-height: 1.5;
    font-size: 14px;
  }

  .card-tags {
    width: auto;
    display: flex;
    flex-direction: column;
    align-items: right;
    justify-content: flex-start;
    max-width: 135px;
  }

  .card-tags-list {    
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    align-items: center;
    justify-content: flex-end;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .card-tags li {
    font-family: 'Fira Code', monospace;
    height: 1rem;
    color: var(--power-text-color);
    display: flex;
    align-items: center;
    justify-content: center;
    text-transform: uppercase;
    flex-shrink: 0;
    font-size: 12px;
    background-color: (--item-background-color);
    border: 1px solid var(--border-color);
    border-radius: 4px;
    padding: 4px 6px;
    margin: 2px;
  }

  .card-image {
    /* remove element by default */
    display: none;
  }

  .card-header {
    /* border: 1px solid red; */
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    width: 100%;
  }
  .card-mini-image {
    object-fit: cover;
    height: 1rem;
    width: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    margin-right: 0.1rem;
  }

  .card-mini-image img {
    height: 100%;
    width: 100%;
    object-fit: cover;
  }

  /* make image visible on desktop */
  @media screen and (min-width: 768px) {
    .card-mini-image {
      display: none;
    }
    .card-image {
      display: block;
      object-fit: cover;
      height: 100px;
      width: 100px;
      overflow: hidden;
      padding-left: 1rem;
    }

    .card-image img {
      height: 100%;
      width: 100%;
      object-fit: cover;
    }
  }
</style>
